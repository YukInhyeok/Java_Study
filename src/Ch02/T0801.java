package Ch02;

public class T0801 {

	public static void main(String[] args) {
		// TODO Auto-generated method stub
		
/*
 1. 용어 정의
 
 프로세스 : PC 또는 컴퓨터상에 설치되어 있는 많은 프로그램 중에서 지금 당장 사용하기 위해서 실행시켜 둔, 현재 사용가능한 상태의 프로그램 
 멀티 프로세스 :  운영체제 상에서 여러 개의 프로세스를 동시에 사용할 수 있는 프로그램
 
 스레드 : 하나의 프로세스 내에서 일을 처리하는 세부 실행 단위 프로그램 내에서 실행되는 프로그램의 제어 흐름 "가벼운 프로세스"라고 표현
 
 
 프로세스 vs 스레드 		 
  	장점 : 프로세스는 실행되고 있는 프로그램이라고 할 수 있는데, 어떤한 기능을 여러 프로세스로 나누어 실행하면 동시에 여러 기능을 처리할 수 있다.   
  	단점 : 프로세스는 프로세스마다 고유한 저장공간을 사용하여 독립적으로 실행 여러 프로세스를 실행하려면 프로세스 간의 정보 교환에 많은 시간이 소요되는 단점이 있다.
  	 		스레드는 고유한 저장공간의 데이터를 사용하기 위해서 저장공간의 데이터가 변경되는 시간이 존재한다. 

        단일 작업                단일 스레드
           .                       .
           |                       |
           |                       |
           |                       |


         다중 작업                다중 스레드
		 	.                       . 
		 ---|---                    |
		 |	|   |                ---|---
		 |	|   |                |  |  |    


	다중 작업 : 단어의 의미만으로는 동시에 여러 일을 처리한다는 개념 여러 프로그램을 동시에 실행시켜 서로 이동하면 작업이 가능한 것		 

	다중 스레드 : 하나의 프로세스 내에 여러 개의 스레드를 이용하여 가지고 있는 프로그램을 동시에 처리하는 것		    
		 	
	제어흐름 : 메소드 main()의 첫 줄에서 시작해서 마지막 줄까지 프로그램 소스코드가 동작되는 순서
 
 ex)  int i=0;
      int i=3;
      System.out.println(i);

 프로세스보다 스레드가 좋은 이유
 : 하나의 프로그램 내부에서 실행되는 스레드는 프로세스보다 오버헤드가 적으면서 처리할 작업을 동시에 실행할 수 있다.
 
 
 2. 프로그램과 프로세스의 관계
 프로그램 : 프로세스 + 워드프로세스, 엑셀, 카톡
 프로세스 : 실행중인 프로그램
          ex) 실행중인 이클립스
              실행중인 팀즈
              실행중인 크롬 
 
 3. 프로세스와 스레드 차이
 : 프로세스가 자신 만의 데이터를 가지는 데 반하여 스레드들은 동일한 데이터를 공유한다.
 
 ex) main(){
     int a=1;
     a = a+1;
     System.out.println(a);
 }
 
 ex) main(){
     int a=2;
     a = a+1;
     System.out.println(a);
 }
 
4.스케쥴러
: 다중 스레드의 실행 순서를 관리하는 프로그램이 운영체제의 스케쥴러라고 한다. 
 
 
5. 스레드가 사용된 예
- 서버에서 소켓으로 데이터를 처리할 때
- 게임에서 이미지가 혼자서 움직일 때
- 특수 효과 같은 것을 줄때(눈 내리는 장면이 멋있게 연출되는 등) 
  
 */
	}

}
